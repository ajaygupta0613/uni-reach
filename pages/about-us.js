import Head from "next/head";

import Header from "@/components/Common/Header";
import DreamUniversity from "@/components/Common/DreamUniversity";
import Testimonials from "@/components/Common/Testimonials";
import Footer from "@/components/Common/Footer";

import AboutBanner from "@/components/AboutPageComponents/Banner";
import AboutDetails from "@/components/AboutPageComponents/Details";
import OurStory from "@/components/AboutPageComponents/OurStory";
import Leadership from "@/components/AboutPageComponents/Leadership";
import OurTeam from "@/components/AboutPageComponents/OurTeaam";

export default function Home({ pageData }) {
  console.log(pageData);
  return (
    <>
      <Head>
        <title>About Us - Unireach</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      <AboutBanner bannerData={pageData.banner} />
      <AboutDetails />
      <OurStory />
      <Leadership />
      <OurTeam />
      <Testimonials />
      <DreamUniversity />
      <Footer />
    </>
  );
}

export const getStaticProps = async () => {
  try {
    const apiData = `https://unireach.in/wp-json/wp/v2/pages/464`;
    const responsePageData = await fetch(apiData);
    const PageData = await responsePageData.json();

    const acf = PageData?.acf;

    if (acf) {
      // Function to fetch image URL by ID
      const fetchImageUrl = async (imageId) => {
        try {
          const response = await fetch(
            `https://unireach.in/wp-json/wp/v2/media/${imageId}`
          );
          const imageData = await response.json();
          return imageData.source_url;
        } catch (error) {
          console.error(`Error fetching image data for ID ${imageId}:`, error);
          return null;
        }
      };

      // Recursively update acf object to replace image IDs with URLs
      const replaceImageIdsWithUrls = async (data) => {
        for (const key in data) {
          if (data.hasOwnProperty(key)) {
            if (typeof data[key] === "number") {
              const imageUrl = await fetchImageUrl(data[key]);
              if (imageUrl) {
                data[key] = imageUrl;
              }
            } else if (typeof data[key] === "object" && data[key] !== null) {
              await replaceImageIdsWithUrls(data[key]);
            }
          }
        }
      };

      await replaceImageIdsWithUrls(acf);
    }

    return {
      props: {
        pageData: acf,
      },
      revalidate: 30,
    };
  } catch (error) {
    console.error("Error fetching page data:", error);
    return {
      notFound: true,
    };
  }
};
